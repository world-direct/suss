name: goreleaser

on:
  push:
    tags:
      - 'v*'

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    env:
      version: unknown # we be set by goreleaser
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21.5
          cache: true

      - name: run tests
        run:  go test ./...

      - id: goreleaser
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WD_HARBOR_REPOSITORY_NAME: ${{ vars.WD_HARBOR_REPOSITORY_NAME }}

      - name: set outputs from goreleaser
        run: |
          version=$(echo $MD | jq -r ".version")
          echo "version=$version" >> $GITHUB_ENV
        env:
          MD: ${{steps.goreleaser.outputs.metadata}}


      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.WD_HARBOR_REPOSITORY_NAME }}
          username: ${{ vars.WD_HARBOR_LIBRARY_USER }}
          password: ${{ secrets.WD_HARBOR_LIBRARY_PASSWORD }}

      - name: retrag and push docker image
        run: |
          docker tag ${{ vars.WD_HARBOR_REPOSITORY_NAME }}/suss:latest ${{ vars.WD_HARBOR_REPOSITORY_NAME }}/suss:${{ env.version }}
          docker push ${{ vars.WD_HARBOR_REPOSITORY_NAME }}/suss:${{ env.version }}

      - name: build and push chart
        run: |
          helm lint ./chart
          helm package chart/ --version ${{ env.version }} --destination=./dist
          helm push ./dist/suss-${{ env.version }}.tgz oci://${{ vars.WD_HARBOR_CHART_REPOSITORY_NAME }}
          